@startuml

title __ENTITY's Class Diagram__\n

  namespace com.lukire.entity {
    class com.lukire.entity.Collision {
        ~ x : float
        ~ y : float
        + Collision()
        + getObject()
        + getX()
        + getY()
    }
  }
  

  namespace com.lukire.entity {
    abstract class com.lukire.entity.Entity {
        {static} - entities : ArrayList<Entity>
        + collidesBlock()
        {abstract} + draw()
        {static} + getEntities()
        + getPlacement()
        + getX()
        + getY()
        + setPlacement()
        + setX()
        + setY()
        {static} + spawn()
    }
  }
  

  namespace com.lukire.entity {
    enum EntityShape {
      ELLIPSE
      SQUARE
    }
  }
  

  namespace com.lukire.entity {
    class com.lukire.entity.Hitbox {
        ~ a : int
        ~ b : int
        + Hitbox()
        + getEntityShape()
        + getHeight()
        + getWidth()
        + isWithin()
    }
  }
  

  namespace com.lukire.entity {
    class com.lukire.entity.Placement {
        ~ direction : PVector
        + Placement()
        + addDirection()
        + applyDirection()
        + getDirection()
        + getMap()
        + getX()
        + getY()
        + setDirection()
    }
  }
  

  com.lukire.entity.Collision o-- T : object
  com.lukire.entity.Entity o-- com.lukire.entity.Placement : placement
  com.lukire.entity.Hitbox o-- com.lukire.entity.EntityShape : entityShape
  com.lukire.entity.Placement -up-|> processing.core.PVector
  com.lukire.entity.Placement o-- com.lukire.map.Map : map


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
